[package]
name                    = "hyperscan-async"
description             = "Wrapper for the hyperscan C++ regex library."
version                 = "0.0.6"
edition.workspace       = true
license                 = "BSD-3-Clause"
repository.workspace    = true
authors.workspace       = true

[features]
default                 = ["static", "compiler"]
static                  = ["hyperscan-async-sys/static"]
compiler                = ["hyperscan-async-sys/compiler", "dep:once_cell"]
dynamic                 = ["hyperscan-async-sys/dynamic"]
chimera                 = ["hyperscan-async-sys/chimera"]
async                   = ["dep:async-stream", "dep:futures-core", "dep:futures-util", "dep:tokio"]
alloc                   = ["dep:indexmap", "dep:parking_lot"]

[lib]
name                    = "hyperscan"

[dependencies]
hyperscan-async-sys.workspace = true

async-stream            = { workspace = true, optional = true }
cfg-if                  = "1"
displaydoc.workspace    = true
futures-core            = { workspace = true, optional = true }
futures-util            = { workspace = true, optional = true }
indexmap                = { workspace = true, optional = true }
libc.workspace          = true
num_enum.workspace      = true
once_cell               = { workspace = true, optional = true }
parking_lot             = { workspace = true, optional = true }
static_assertions.workspace = true
thiserror.workspace     = true
tokio                   = { workspace = true, features = ["rt", "sync", "io-util", "macros"], optional = true }

[dev-dependencies]
eyre.workspace          = true
tokio                   = { workspace = true, features = ["macros"] }
tokio-test.workspace    = true

[lints]
workspace               = true

[package.metadata.docs.rs]
all-features            = true
rustdoc-args            = ["--cfg", "docsrs"]
