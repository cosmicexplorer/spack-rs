name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

jobs:
  docs:
    name: doc ${{ matrix.args }}
    strategy:
      fail-fast: false
      matrix:
        args:
          - -p super-process
          # Fails due to tokio for some reason due to event-listener dep from the "fs" feature?
          # - -p spack-rs
          - -p vectorscan
          - -p re2
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt

    - id: cache-rust-doc
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - name: check docs
      env:
        DOCS_RS: y
        RUSTDOCFLAGS: --cfg docsrs
      run: cargo doc ${{ matrix.args }} --all-features -vv

  fmt:
    name: fmt
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - id: cache-rust-fmt
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - name: check fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --check --verbose --all

  clippy:
    name: clippy ${{ matrix.args }}
    strategy:
      fail-fast: false
      matrix:
        args:
          - -p super-process -p spack-rs
          - -p re2 -vv
          # This keeps rebuilding vectorscan and taking 20 minutes, not clear why.
          # - -p vectorscan --no-default-features --features chimera,static,compiler,async -vv
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy

    - id: cache-rust-style
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - id: cache-spack
      name: cache spack
      uses: actions/cache@v3
      env:
        cache-name: cache-spack-dir-checker-${{ matrix.args }}
      with:
        path: ~/.spack/summonings
        key: spack-summonings-${{ env.cache-name }}-v15

    - name: check clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: ${{ matrix.args }}

  test-spack:
    name: test spack-rs against ${{ matrix.rust-toolchain }} rust
    strategy:
      fail-fast: true
      matrix:
        rust-toolchain: ['stable', 'nightly']
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust ${{ matrix.rust-toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        override: true
        components: rustfmt

    - id: cache-rust-tests
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - id: cache-spack
      name: cache spack
      uses: actions/cache@v3
      env:
        cache-name: cache-spack-dir-spack-tests
      with:
        path: ~/.spack/summonings
        key: spack-summonings-${{ env.cache-name }}-v15

    - name: test rust
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p spack-rs -p super-process

  test-re2:
    name: test re2 against ${{ matrix.rust-toolchain }} rust
    strategy:
      fail-fast: true
      matrix:
        rust-toolchain: ['stable', 'nightly']
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust ${{ matrix.rust-toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        override: true
        components: rustfmt

    - id: cache-rust-tests
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - id: cache-spack
      name: cache spack
      uses: actions/cache@v3
      env:
        cache-name: cache-spack-dir-re2-tests
      with:
        path: ~/.spack/summonings
        key: spack-summonings-${{ env.cache-name }}-v15

    - name: test dynamic
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p re2 --no-default-features --features dynamic -vv

    - name: test static
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p re2 --no-default-features --features static -vv

  test-vectorscan:
    name: test vectorscan against ${{ matrix.rust-toolchain }} rust
    strategy:
      fail-fast: true
      matrix:
        rust-toolchain: ['stable', 'nightly']
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: install rust ${{ matrix.rust-toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        override: true
        components: rustfmt

    - id: cache-rust-tests
      name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        key: v1

    - id: cache-spack
      name: cache spack
      uses: actions/cache@v3
      env:
        cache-name: cache-spack-dir-vectorscan-tests
      with:
        path: ~/.spack/summonings
        key: spack-summonings-${{ env.cache-name }}-v15

    - name: test vectorscan-static-with-compile
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p vectorscan --no-default-features --features static,alloc,compiler -vv

    - name: test vectorscan-static-with-compile-async
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p vectorscan --no-default-features --features static,alloc,async,compiler -vv

    - name: test vectorscan-dynamic-with-compile
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p vectorscan --no-default-features --features dynamic,compiler -vv

    # FIXME: add vectorscan-static-runtime-only and vectorscan-dynamic-runtime-only!!

    - name: test vectorscan-static-chimera
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p vectorscan --no-default-features --features chimera,static,alloc,compiler -vv

    - name: test vectorscan-static-chimera-async
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -p vectorscan --no-default-features --features chimera,static,alloc,async,compiler -vv
