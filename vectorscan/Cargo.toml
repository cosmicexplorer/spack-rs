[package]
name                    = "vectorscan-async"
description             = "Wrapper for the vectorscan C++ regex library."
version                 = "0.0.0"
edition.workspace       = true
license                 = "BSD-3-Clause"
repository.workspace    = true
authors.workspace       = true

[features]
default                 = ["static", "compiler", "stream", "vectored", "catch-unwind"]
static                  = ["vectorscan-sys/static"]
compiler                = ["vectorscan-sys/compiler"]
dynamic                 = ["vectorscan-sys/dynamic"]
chimera                 = ["compiler", "static", "vectorscan-sys/chimera", "dep:smallvec"]
alloc                   = ["static", "dep:indexmap", "dep:parking_lot"]
async                   = ["dep:futures-core", "dep:tokio"]
stream                  = []
vectored                = []
catch-unwind            = []
tokio-impls             = ["async", "stream", "dep:futures-util"]

[lib]
name                    = "vectorscan"

[dependencies]
vectorscan-sys.workspace = true

cfg-if                  = "1"
displaydoc.workspace    = true
futures-core            = { workspace = true, optional = true }
futures-util            = { workspace = true, optional = true }
handles.workspace       = true
indexmap                = { workspace = true, optional = true }
libc.workspace          = true
num_enum.workspace      = true
parking_lot             = { workspace = true, optional = true }
smallvec                = { version = "2.0.0-alpha.1", optional = true }
static_assertions.workspace = true
thiserror.workspace     = true
tokio                   = { workspace = true, features = ["rt", "sync"], optional = true }

[dev-dependencies]
eyre.workspace          = true
futures-util.workspace  = true
jemallocator            = "0.5.4"
tokio                   = { workspace = true, features = ["io-util", "macros"] }
tokio-test.workspace    = true

[lints]
workspace               = true

[package.metadata.docs.rs]
all-features            = true
rustdoc-args            = ["--cfg", "docsrs"]
