[package]
name                    = "hyperscan-async"
description             = "Async wrapper for the hyperscan C++ regex library."
version                 = "0.0.0"
edition                 = "2021"
license                 = "BSD-3-Clause"
repository.workspace    = true
authors.workspace       = true

[features]
default                 = ["static", "compile"]
static                  = []
compile                 = []
dynamic                 = []
chimera                 = []

[package.metadata.spack.envs.hyperscan-static-with-compile]
spec                    = "hyperscan@v5.4.2+static~chimera"
deps                    = { hyperscan = { type = "static", lib_names = ["hs"] } }
features                = { needed = ["static", "compile"], conflicting = ["chimera"] }

[package.metadata.spack.envs.hyperscan-dynamic-with-compile]
spec                    = "hyperscan@v5.4.2+shared~chimera"
deps                    = { hyperscan = { type = "dynamic", lib_names = ["hs"] } }
features                = { needed = ["dynamic", "compile"], conflicting = ["chimera"] }

[package.metadata.spack.envs.hyperscan-static-runtime-only]
spec                    = "hyperscan@v5.4.2+static~chimera"
deps                    = { hyperscan = { type = "static", lib_names = ["hs_runtime"] } }
features                = { needed = ["static"], conflicting = ["compile", "chimera"] }

[package.metadata.spack.envs.hyperscan-dynamic-runtime-only]
spec                    = "hyperscan@v5.4.2+shared~chimera"
deps                    = { hyperscan = { type = "dynamic", lib_names = ["hs_runtime"] } }
features                = { needed = ["dynamic"], conflicting = ["compile", "chimera"] }

[package.metadata.spack.envs.hyperscan-static-chimera]
spec                    = "hyperscan@v5.4.2+chimera+static"
features                = { needed = ["chimera"] }

[package.metadata.spack.envs.hyperscan-static-chimera.deps]
hyperscan               = { type = "static", lib_names = ["hs", "chimera"] }
pcre                    = { type = "static", lib_names = ["pcre"] }

[build-dependencies]
bindgen.workspace       = true
eyre.workspace          = true
spack.workspace         = true
tokio                   = { workspace = true, features = ["rt-multi-thread", "macros"] }

[dependencies]
async-stream.workspace  = true
cfg-if                  = "1"
displaydoc.workspace    = true
futures-core.workspace  = true
futures-util.workspace  = true
libc.workspace          = true
num_enum.workspace      = true
once_cell.workspace     = true
parking_lot.workspace   = true
static_assertions.workspace = true
thiserror.workspace     = true
tokio                   = { workspace = true, features = ["rt", "sync", "io-util"] }
tokio-stream            = "0.1.14"

[dev-dependencies]
eyre.workspace          = true
tokio                   = { workspace = true, features = ["macros"] }
tokio-test.workspace    = true

[lints]
workspace               = true

[package.metadata.docs.rs]
all-features            = true
rustdoc-args            = ["--cfg", "docsrs"]
